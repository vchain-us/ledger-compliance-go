syntax = "proto3";

import "schema.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package lc.schema;

option go_package = "github.com/vchain-us/ledger-compliance/server/schema";

message TamperReport {
	uint64 index = 1;
	bytes key = 2;
	bytes root = 3;
}

message ReportOptions{
	TamperReport payload = 1;
	immudb.schema.Signature signature = 2;
}

message DataValue {
    string name = 1;
    string type = 2;
    bytes value = 3;
}

message Data {
    string key = 1;
    int64 msgID = 2;
    string dbName = 3;
    string tableName = 4;
    string operation = 5;
    bytes data = 6;
}

message Response {
    int32 status = 1;
    string msg = 2;
    int64 msgID = 3;
    immudb.schema.VerifiableTx VerifiableTx = 4;
    immudb.schema.ImmutableState state = 5;
}

message VerifiableItemExt {
	immudb.schema.VerifiableEntry item  = 1;
	google.protobuf.Timestamp timestamp = 2;
}


message ItemExt {
	immudb.schema.Entry item = 1;
	google.protobuf.Timestamp timestamp = 2;
}

message ItemExtList {
	repeated ItemExt items = 1;
}


message ZItemExt {
	immudb.schema.ZEntry item = 1;
	google.protobuf.Timestamp timestamp = 2;
}

message ZItemExtList {
	repeated ZItemExt items = 1;
}

service LcService {
	// immudb primitives
	// setters and getters
	rpc Set (immudb.schema.SetRequest) returns (immudb.schema.TxMetadata){};
	rpc Get (immudb.schema.KeyRequest) returns (immudb.schema.Entry){};
	rpc VerifiableSet (immudb.schema.VerifiableSetRequest) returns (immudb.schema.VerifiableTx){};
	rpc VerifiableGet (immudb.schema.VerifiableGetRequest) returns (immudb.schema.VerifiableEntry){};
	// batch
	rpc GetAll (immudb.schema.KeyListRequest) returns (immudb.schema.Entries){};
	rpc ExecAll (immudb.schema.ExecAllRequest) returns (immudb.schema.TxMetadata) {};
	// scanners
	rpc Scan(immudb.schema.ScanRequest) returns (immudb.schema.Entries){};
	rpc History(immudb.schema.HistoryRequest) returns (immudb.schema.Entries){};
	rpc ZAdd (immudb.schema.ZAddRequest) returns (immudb.schema.TxMetadata){};
	rpc VerifiableZAdd (immudb.schema.VerifiableZAddRequest) returns (immudb.schema.VerifiableTx){};
	rpc ZScan (immudb.schema.ZScanRequest) returns (immudb.schema.ZEntries){};
	// mixed
	rpc CurrentState (google.protobuf.Empty) returns (immudb.schema.ImmutableState){};

	rpc Health (google.protobuf.Empty) returns (immudb.schema.HealthResponse){};
	// ledger compliance extensions
	rpc ReportTamper(ReportOptions) returns (google.protobuf.Empty){};
	rpc SendData (stream Data) returns (stream Response){};
	// ledger compliance extensions - items extended with additional properties managed by LC backend (date)
	rpc VerifiableGetExt(immudb.schema.VerifiableGetRequest) returns (VerifiableItemExt){};
	rpc ZScanExt (immudb.schema.ZScanRequest) returns (ZItemExtList){};
	rpc HistoryExt(immudb.schema.HistoryRequest) returns (ItemExtList){};

}
