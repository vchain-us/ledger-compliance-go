syntax = "proto3";

import "schema.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

package lc.schema;

option go_package = "github.com/vchain-us/ledger-compliance/server/schema";

message TamperReport {
	uint64 index = 1;
	bytes key = 2;
	bytes root = 3;
}

message ReportOptions{
	TamperReport payload = 1;
	immudb.schema.Signature signature = 2;
}

message DataValue {
    string name = 1;
    string type = 2;
    bytes value = 3;
}

message Data {
    string key = 1;
    int64 msgID = 2;
    string dbName = 3;
    string tableName = 4;
    string operation = 5;
    bytes data = 6;
}

message Response {
    int32 status = 1;
    string msg = 2;
    int64 msgID = 3;
    immudb.schema.Proof proof = 4;
    immudb.schema.Root root = 5;
}

message SafeItemExt {
	immudb.schema.SafeItem item  = 1;
	google.protobuf.Timestamp timestamp = 2;
}


message ItemExt {
	immudb.schema.Item item = 1;
	google.protobuf.Timestamp timestamp = 2;
}

message ItemExtList {
	repeated ItemExt items = 1;
}


message ZItemExt {
	immudb.schema.ZItem item = 1;
	google.protobuf.Timestamp timestamp = 2;
}

message ZItemExtList {
	repeated ZItemExt items = 1;
}

service LcService {
	// immudb primitives
	// setters and getters
	rpc Set (immudb.schema.KeyValue) returns (immudb.schema.Index){};
	rpc Get (immudb.schema.Key) returns (immudb.schema.Item){};
	rpc SafeSet(immudb.schema.SafeSetOptions) returns (immudb.schema.Proof){};
	rpc SafeGet(immudb.schema.SafeGetOptions) returns (immudb.schema.SafeItem){};
	// tamper proofing
	rpc Consistency(immudb.schema.Index) returns (immudb.schema.ConsistencyProof){};
	rpc Inclusion(immudb.schema.Index) returns (immudb.schema.InclusionProof){};
	// batch
	rpc SetBatch (immudb.schema.KVList) returns (immudb.schema.Index){};
	rpc GetBatch (immudb.schema.KeyList) returns (immudb.schema.ItemList){};
	rpc SetBatchOps (immudb.schema.BatchOps) returns (immudb.schema.Index){};
	// scanners
	rpc Scan(immudb.schema.ScanOptions) returns (immudb.schema.ItemList){};
	rpc History(immudb.schema.HistoryOptions) returns (immudb.schema.ItemList){};
	rpc ZAdd (immudb.schema.ZAddOptions) returns (immudb.schema.Index){};
	rpc SafeZAdd (immudb.schema.SafeZAddOptions) returns (immudb.schema.Proof){};
	rpc ZScan (immudb.schema.ZScanOptions) returns (immudb.schema.ZItemList){};
	// mixed
	rpc CurrentRoot(google.protobuf.Empty) returns (immudb.schema.Root) {};
	rpc Health (google.protobuf.Empty) returns (immudb.schema.HealthResponse){};
	// ledger compliance extensions
	rpc ReportTamper(ReportOptions) returns (google.protobuf.Empty){};
	rpc SendData (stream Data) returns (stream Response);
	// ledger compliance extensions - items extended with additional properties managed by LC backend (date)
	rpc SafeGetExt(immudb.schema.SafeGetOptions) returns (SafeItemExt){};
	rpc ZScanExt (immudb.schema.ZScanOptions) returns (ZItemExtList){};
	rpc HistoryExt(immudb.schema.HistoryOptions) returns (ItemExtList){};

}
